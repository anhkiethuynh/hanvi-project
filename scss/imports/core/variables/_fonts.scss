@use "sass:math";
$const_fsize: "fs";
$const_ffamily: "ff";
$const_flineHeight: "lh";
$const_fWeight: "fw";
/* ******************************************** */
/* *                 Font Size                * */
/* ******************************************** */
$fontSizes: (
	base: (
		body: 14px,
		heading1: 100px,
		heading2: 60px,
		subHeading: 50px,
	),
	xl: (),
	lg: (),
	md: (
		heading1: 60px,
		subHeading: 25px,
	),
	sm: (
		// heading1: 5px,
	),
	xs: (
		heading1: 20px,
	),
);
/* ******************************************** */
/* *                 Line Height                * */
/* ******************************************** */
$lineHeight: (
	base: (
		body: 14px,
		heading1: 100px,
		heading2: 60px,
		subHeading: 50px,
	),
	xl: (),
	lg: (),
	md: (
		heading1: 60px,
		subHeading: 25px,
	),
	sm: (
		// heading1: 5px,
	),
	xs: (
		heading1: 20px,
	),
);
/* ******************************************** */
/* *      Font family from font converted     * */
/* ******************************************** */
$baseFamilies: (
	fmain: "abc",
	fbold: "bcd",
	ftitalic: "def",
);
/* ******************************************** */
/* *      Font family from Design System        * */
/* ******************************************** */
$documentFamilies: (
	body: map-get($baseFamilies, "fmain"),
	heading1: map-get($baseFamilies, "fmain"),
	heading2: map-get($baseFamilies, "fmain"),
	subHeading: "...",
);
/* ******************************************** */
/* *                 Font Size                * */
/* ******************************************** */
$fontFamilies: map-merge($baseFamilies, $documentFamilies);

/* **********************************************************************/
/* * Get base font size in font size to generate default css variable* */
/* **********************************************************************/
$baseFontSize: map-get(
	$map: $fontSizes,
	$key: "base",
);
$baseLineHeight: map-get(
	$map: $lineHeight,
	$key: "base",
);
:root {
	@each $key, $value in $baseFontSize {
		--#{$const_fsize}-#{$key}: #{$value};
	}
	@each $key, $value in $baseLineHeight {
		--#{$const_flineHeight}-#{$key}: #{$value};
	}
	// @each $key, $value in $baseFontSize {
	// 	--#{$const_flineHeight}-#{$key}: #{$value};
	// }
	// @generatevariables ($fontSizes);
	@each $key, $value in $fontSizes {
		@if ($key != "base") {
			@media (max-width: map-get($map: $grid-breakpoints, $key: #{$key})) {
				@each $ckey, $cvalue in $value {
					--#{$const_fsize - $ckey}: #{$cvalue};
				}
			}
		}
	}
	@each $key, $value in $lineHeight {
		@if ($key != "base") {
			@media (max-width: map-get($map: $grid-breakpoints, $key: #{$key})) {
				@each $ckey, $cvalue in $value {
					--#{$const_flineHeight - $ckey}: #{$cvalue};
				}
			}
		}
	}
}

/* *********************************************************/
/* *                   Generating text class               * */
/* *********************************************************/
@each $key, $value in $baseFontSize {
	.text-#{$key} {
		// font-size: var(--#{$const_fsize}-#{$ckey});
		line-height: var(--lh, 0);
	}
}

h1 {
	font-size: var(--fs-heading1);
}
